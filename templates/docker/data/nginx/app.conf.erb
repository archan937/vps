<%- upstreams.each do |upstream| %>

upstream <%= upstream[:name] %> {
  server <%= upstream[:name] %>:<%= upstream[:port] %>;
}
<%- upstream[:domains].partition{|domain| domain.include?("http://")}.reject(&:empty?).each do |domains| %>
<%-
  https = domains.first.include?("https://")
  domains = domains.collect{|domain| domain.gsub(/https?:\/\//, "")}.join(" ")
  domain = domains.split(" ")[0]
  proxy_pass = "http://#{ upstream[:name] }"
%>

server {
  listen 80;
  server_name <%= domains %>;
  server_tokens off;

  <%- if https %>
  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  listen 443 ssl;
  server_name <%= domains %>;
  server_tokens off;

  ssl_certificate /etc/letsencrypt/live/<%= domain %>/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/<%= domain %>/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  <%- end %>
  <%- if upstream[:nginx] %>
<%= upstream[:nginx].gsub("PROXY_PASS", proxy_pass).indent(2) %>

  <%- end %>
  location / {
    proxy_pass        <%= proxy_pass %>;
    proxy_set_header  Host $http_host;
    proxy_set_header  X-Real-IP $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}
<%- end %>
<%- end %>
